1. MOV R_0 25 , ADD R_1 R_0 , ADD R_0 R_1 , MOV R_1 22 , ADD R_0 R_1 , MOV R_1 9 , MOV R_2 18 , MOV R_4 23 , MOV [R_1] R_4 , MOV R_4 3 , MOV [R_2] R_4 , MOV R_1 [R_1] , MOV R_2 [R_2] , MOV R_3 R_2 , MOV R_4 2 , CMP R_4 R_1 , ADD R_2 R_3 , INC R_4 , JNE -3 , MOV [R_0] R_2 , HALT 
2. 501910401001505610015049509251177044510370848041808260C2510241011083C004D7FD70020000
3. Add 25+25+22 to get 72 in register-0 for saving the final result. making register-1 and 2 equal to the locations in memory where to store the values that need to be multiplied. making register-4 23 (mulitplier) and them moving to the absolute adress in register-1, then doing it for the number 3 (number being multiplied) into adress of register-2. now initialising register-1 and 2 to the values stored in the two locations of memory as reqested (9 and 18), and thenm copying the value of register-2 into register-3 so that i can iteratively add them. set register-4 (counter) to 2 (would be one but i do one extra pass after finiding equality between the counter and multiplier) as a counter. then compare counter in register-4 and multiplier in register-1, add register-2 and 3, the increment counter and jne back 3. when loop exits result is found in register-2. simply make the absolute address in memory stored in register-0 equal to the value in register-2 and halt.