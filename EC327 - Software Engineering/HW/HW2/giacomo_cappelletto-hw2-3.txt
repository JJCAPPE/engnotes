The scale function was a mutator function, which modifies the values/objects passed to it directly in memory, and therefore has the benefit of not needing to store a newly returned value/object in memory too. This generally means the function is slightly faster as it does not need to create and return a new object. Furthermore, it enforces type safety in some sense, by assuring that the 'returned' value/object is always of the same type as the initial. On the flip side, this means that the inital value/state of the passed value/object is lost. The changing state of a varaible can mean that it is harder to debug the code.